<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.mapper.XyNewsTypeMapper">

    <resultMap type="XyNewsType" id="XyNewsTypeResult">
        <result property="id" column="id"/>
        <result property="typeName" column="type_name"/>
        <result property="icon" column="icon"/>
        <result property="parentId" column="parent_id"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectXyNewsTypeVo">
        select id, type_name, icon, parent_id, status, remark, create_by, create_time, update_by, update_time from xy_news_type
    </sql>

    <select id="selectXyNewsTypeList" parameterType="XyNewsType" resultMap="XyNewsTypeResult">
        <include refid="selectXyNewsTypeVo"/>
        <where>
            <if test="typeName != null">and type_name like concat('%', #{typeName}, '%')</if>
            <if test="icon != null">and icon = #{icon}</if>
            <if test="parentId != null">and parent_id = #{parentId}</if>
            <if test="status != null">and status = #{status}</if>
        </where>
    </select>

    <select id="selectXyNewsTypeById" parameterType="Long" resultMap="XyNewsTypeResult">
        <include refid="selectXyNewsTypeVo"/>
        where id = #{id}
    </select>

    <insert id="insertXyNewsType" parameterType="XyNewsType" useGeneratedKeys="true" keyProperty="id">
        insert into xy_news_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null">type_name,</if>
            <if test="icon != null">icon,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeName != null">#{typeName},</if>
            <if test="icon != null">#{icon},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateXyNewsType" parameterType="XyNewsType">
        update xy_news_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="icon != null">icon = #{icon},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteXyNewsTypeById" parameterType="Long">
        delete from xy_news_type where id = #{id}
    </delete>

    <delete id="deleteXyNewsTypeByIds" parameterType="String">
        delete from xy_news_type where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <resultMap id="treeMap" type="com.ruoyi.domain.XyNewsType">
        <result column="id" property="id"/>
        <result column="type_name" property="typeName"/>
        <result column="icon" property="icon"/>
        <result column="parent_id" property="parentId"/>
        <collection column="id" property="children" ofType="com.ruoyi.domain.XyNewsType" select="getByParentId">
        </collection>
    </resultMap>

    <select id="selectTree" resultMap="treeMap">
        select id, type_name, icon,parent_id
        from xy_news_type
        where parent_id = 0
    </select>

    <select id="getByParentId" resultMap="treeMap">
        select id, type_name, icon,parent_id
        from xy_news_type
        where parent_id = #{id}
    </select>

    <select id="hasChildById" resultType="java.lang.Integer">
        select count(1) from xy_news_type where parent_id = #{id}
    </select>
</mapper>
